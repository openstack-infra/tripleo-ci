---
# In order to make this role distro agnostic, it replaces
# rhel_image_source with tripleo_image_source, will be removed
# in future.

- name: Set tripleo_image_source
  set_fact:
    tripleo_image_source: "{{ rhel_image_source }}"
  when:
    - rhel_image_source is defined
    - ansible_distribution == 'RedHat'
    - ansible_distribution_major_version is version(8, '>=')

- when: tripleo_image_source is defined
  block:
    - name: Set dib related facts used by tripleo-ci build-image role build template
      set_fact:
        dib_local_image: "{{ workspace }}/{{ tripleo_image_source | urlsplit('path') | basename }}"
        dib_node_dist: >-
          {% if ansible_distribution == 'RedHat' and ansible_distribution_major_version is version(8, '>=') -%}
          "rhel"
          {%- else -%}
          "centos"
          {%- endif %}
        dib_release: "8"
        dib_yum_repo_conf: >-
          /etc/yum.repos.d/delorean.repo
          {% if ansible_distribution == 'RedHat' and ansible_distribution_major_version is version(8, '>=') -%}
          /etc/yum.repos.d/delorean-rhel8-{{ release|default('master') }}-deps.repo
          /etc/yum.repos.d/rh-cloud.repo
          {%- else -%}
          /etc/yum.repos.d/delorean-{{ release|default('master') }}-testing.repo
          /etc/yum.repos.d/tripleo-centos-powertools.repo
          /etc/yum.repos.d/tripleo-centos-highavailability.repo
          {%- endif %}
        cacheable: true

    - name: Download TripleO source image
      get_url:
        url: "{{ tripleo_image_source }}"
        dest: "{{ dib_local_image }}"

# get python_v fact used with vars/common.yaml to get
# python2 or python3 packages in below tasks
- name: Get python_v fact for py2 or py3 common vars
  include_tasks: check_set_py3.yaml

- name: Install pip and virtualenv
  become: true
  package:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ python_version[python_v] }}-pip"
    - "{{ python_version[python_v] }}-virtualenv"

- when: python_v == "py2"
  block:

    - name: Install PyYAML for python2
      package:
        name: PyYAML
        state: present
      become: true

- when: python_v == "py3"
  block:

    - name: Install PyYAML for python3
      package:
        name: python3-pyyaml
        state: present
      become: true

    - name: Install python3-devel with provides pathfix.py
      package:
        name: python3-devel
        state: present
      become: true

    - name: Create a script that fixes shebang for python3
      template:
        src: pathfix_repos.sh.j2
        dest: "{{ workspace }}/pathfix_repos.sh"
        mode: u=rwx

    - name: Fix shebang path for python3
      command: bash {{ workspace }}/pathfix_repos.sh

- name: Install deps from upper-constraints
  pip:
    extra_args: "-c {{ openstack_git_root }}/requirements/upper-constraints.txt"
    requirements: "{{ openstack_git_root }}/{{ item }}/requirements.txt"
    virtualenv: "{{ workspace }}/venv"
  with_items:
    - diskimage-builder
    - python-tripleoclient
    - tripleo-common

- name: pip install tripleo items
  pip:
    name:
      - "file://{{ openstack_git_root }}/diskimage-builder"
      - "file://{{ openstack_git_root }}/python-tripleoclient"
      - "file://{{ openstack_git_root }}/tripleo-common"
    state: present
    virtualenv: "{{ workspace }}/venv"
